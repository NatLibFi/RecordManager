; datasources.ini -- Data source settings
;
; For every OAI-PMH source you would like to harvest, create a section like this:
;
; [section_name]
; url = http://oai.myuniversity.edu/
; set = my_optional_set
; metadataPrefix = oai_dc
; idSearch[] = "/oai:myuniversity.edu:/"
; idReplace[] = "myprefix-"
; dateGranularity = auto
; verbose = false
; deletions = ListIdentifiers
;
; url is the base URL for the OAI-PMH source.
;
; set is the identifier of a set to harvest (normally found in the <setSpec> tag of
; an OAI-PMH ListSets response).  Omit this setting to harvest all records.
;
; metadataPrefix is the metadata format to harvest (oai_dc will be used by default
; if the value is omitted).
;
; idSearch[] and idReplace[] may be used to manipulate IDs with regular expressions.
; This is useful for adding or removing prefixes and swapping out problematic
; characters.  You may use multiple pairs of search and replace settings to perform
; multiple manipulations.
;
; dateGranularity is the granularity used by the server for representing dates.
; This may be "YYYY-MM-DDThh:mm:ssZ," "YYYY-MM-DD" or "auto" (to query the server
; for details).  The default is "auto."
;
; verbose may be set to true in order to display more detailed output while
; harvesting; this may be useful for troubleshooting purposes, but it defaults to
; false.
;
; deletions = ListIdentifiers indicates that the OAI-PMH provider does not support
; deletions. In this case ListIdentifiers method is used to list the existing
; record identifiers and mark deleted record that no longer exist.
;
; debugLog may be pointed to a file where all the OAI-PMH requests and responses are written.
;
; RecordManager settings:
; type                  Harvester type (HTTPFiles, OAI-PMH (default), SFX, SierraApi)
; institution           The institution code mapped to the source (required)
; recordXPath           xpath expression used when loading records from a file to identify a single record (optional, e.g. //record)
; format                Record format in RecordManager
; oaipmhTransformation[] XSL Transformations to be applied to the OAI-PMH responses (e.g. to strip namespaces, optional)
; preTransformation[]   XSL Transformations to be applied to files to be imported (e.g. to strip namespaces, optional)
; reParseTransformed    Whether to re-parse transformation results. Disabled by default for performance reasons, but can be enabled to e.g. parse fields added by outputting un-encoded text.
; recordSplitterClass   PHP class used to split records in import or OAI-PMH harvest (optional, e.g. to split EAD records to multiple records)
; recordSplitter        Transformation (alternative to PHP class above) used to split records in import or OAI-PMH harvest (optional, e.g. to split EAD records to multiple records)
; recordSplitterParams[] An array of extra parameters that can be used to customize record splitter behavior. Available options depend on the splitter used.
; normalization         XSL Transformation to be applied to each record (optional)
; dedup                 Whether to deduplicate records in this set (optional, true or false, default false)
; keepMissingHierarchyMembers
;                       If true, existing members of a hierarchical record not present in a newly imported record are kept instead of deleted (optional, true or false, default false)
; solrTransformation    XSL Transformation for solr updates (required for formats whose driver doesn't provide toSolrArray method)
; componentParts        How to handle component parts:
;                         as_is                No special handling (default)
;                         merge_all            Merge all component parts to their host records
;                         merge_non_articles   Merge to host record unless article (including e-journal articles)
;                         merge_non_earticles  Merge to host record unless e-journal article
; idPrefix              Prefix to be used with the record ID's. Prefixes are always added so that ID's are unique, e.g. ID 1234 becomes prefix.1234 (optional, section name is used if not provided).
; solrIdPrefix          Prefix to be used with the record ID's in Solr (optional, overrides idPrefix but does not modify the prefix used in the Database).
; indexMergedParts      Whether to index merged component parts also separately with hidden_component_boolean field set to true. Defaults to true.
; indexUnprefixedIds    Whether to index record ID's without the source prefix. Default is false.
; {field}_mapping       A mapping file (.ini-style) to be used to map values of a field when updating Solr index. Useful for e.g. mapping multiple location codes to one.
; institutionInBuilding If building hierarchy is in use, what to add as institution on the top level:
;                         institution          Add the institution code (default)
;                         source               Add the source id
;                         driver               Add whatever the driver returns in the institution field
;                         "none"               Don't add a top level. Note that due to PHP ini file handling, the quotes are required.
;                         institution/source   Use institution and source id separated with a slash
; extraFields[]         An array of extra fields added to each record from this data source when sending records to Solr.
;                       Use format fieldname:contents, e.g.
;                         extraFields[] = sector_str_mv:library
; fieldRules[]          An array of rules for changing fields before they're sent to Solr. Allows deleting, copying and moving of fields.
;                       Rules are processed in order before processing mappings and converting hierarchical facets.
;                       The following rules are available:
;                         delete <field>             Removes a field
;                         copy <from> <to> [default] Copies field <from> to <to>. A default value can be specified in case the field is empty or doesn't exist.
;                         move <from> <to> [default] Moves field <from> to <to>. A default value can be specified in case the field is empty or doesn't exist.
;                       Examples:
;                         fieldRules[] = "delete collection"
;                         fieldRules[] = "copy building building2_str_mv MAIN"
;                         fieldRules[] = "move author author2"
; driverParams[]        An array of extra parameters that can be used to customize record driver behavior
; enrichments[]         An array of enrichment class names that can be used to enrich records. ",final" can be appended to indicate that enrichment is executed to the
;                       final record after mappings etc. have been processed. By default it is executed before mappings, normalization etc.
; componentPartSourceId[] An array defining linked sources that are used to fetch component parts from this source
; authority[<type>]     Map to authority index sources where <type> is authority record type
;                       (corporateBody, person) or * for any;
; authority_id_regex[<type>] Regex for filtering allowed authority ids
;                            (used when indexing authority ids and when enriching biblio records with MarcAuthEnrichment)
; fullTextXPaths        XPath expression denoting full text fields
; fullTextUrlXPaths     XPath expression denoting fields that contain URLs to full text content (plain text only at the moment)

; OAI-PMH Provider Specific settings:
; transformation_to_{fmt}
;                       XSL Transformation used to convert records from the original format to the requested format. E.g. if records are stored in MARC format,
;                       transformation_to_ese=marc2ese.properties could be used to transform the MARC records to ESE format.
; ignoreOaiIdInProvider Whether to ignore original harvested OAI identifier (true / false). Useful e.g. when the original source repository uses bad identifiers
;                       or a record splitter is used to split a single records to multiple smaller parts.

; SAMPLE CONFIGURATION FOR OPEN JOURNAL SYSTEMS
;[OJS]
;institution=SampleInstitution
;format=dc
;url = http://ojs.myuniversity.edu/oai
;metadataPrefix = oai_dc
;idSearch[] = "/^oai:myuniversity.edu:/"
;idReplace[] = "ojs-"
;idSearch[] = "/\//"
;idReplace[] = "-"
;institution = MyInst
;format = dc
;solrTransformation = oai_dc.properties

; Sample Voyager configuration using the OAI-PMH provider by NLF (http://www.exlibrisgroup.org/display/VoyagerCC/OAI-PMH+provider+for+Voyager)
;[voyager]
;url = https://voyager.server/cgi-bin/oai-pmh.cgi
;set = normal
;metadataPrefix = marc21
;institution = SampleInstitution
;format = marc
;componentParts = merge_non_articles
;dedup = true
;building_mapping = voyager_locations.map

; Sample Koha configuration
;[koha]
;url = https://koha.address/cgi-bin/koha/opac/oai.pl
;metadataPrefix = marc21
;institution = SampleInstitution
;format = marc
;componentParts = merge_non_earticles
;; Hierarchical format facet:
;format_mapping[] = marc_format_to_hierarchy.map
;format_mapping[] = sub_format.map,regexp
;dedup = true
;driverParams[] = "idIn999=true"
;driverParams[] = "003InLinkingID=true"
;driverParams[] = "kohaNormalization=true"
;enrichments[] = MarcAuthEnrichment,final

; Sample DSpace configuration
;[dspace]
;url = http://dspace.server/dspace-oai/request
;metadataPrefix = oai_dc
;institution = SampleInstitution
;format = dc
;set = public
;dedup = true

; Sample EAD configuration
;[arc]
;institution = MyInst
;url = http://oai-pmh.ead-server/request
;metadataPrefix = ead
;recordSplitterClass = "\RecordManager\Base\Splitter\Ead"
;format = ead
;preTransformation = strip_namespaces.xsl
;oaipmhTransformation = strip_namespaces.xsl
;format_mapping = ead_level_to_format.map
;non_inherited_fields[] = physdesc
;prepend_title_with_subtitle = true
;prepend_parent_title_with_unitid = true
;recordXPath = //ead
;oaiIDXPath = ../../header/identifier

; Sample SFX configuration
;[sfx]
;type = sfx
;url = http://sfx.server/export/sfxtst41/
;filePrefix = NDL
;format = marc
;normalization = sfx.properties
;institution = SampleInstitution

; Sample configuration for Sierra REST API
;[sierra]
;type = sierra
;sierraApiKey = "[api_key]"
;sierraApiSecret = "[api_secret]"
;sierraApiVersion = 5
;url = https://kirjtuo1.helmet.fi/iii/sierra-api
;batchSize = 100
;; Support for asking for non-suppressed records exists with the setting below, but as
;; long as the API doesn't return suppressed records as deleted in that case (as is
;; the situation at least with API v3), don't use it, since records that go from
;; unsuppressed to suppressed won't be detected.
;;suppressedRecords = false
;suppressedBibCode3 = 'c,d,n'
;institution = SierraLib
;format = marc
;dedup = true
;building_mapping = sierra_locations.map

; Sample configuration for GeniePlus REST API
;[GeniePlus]
;type = GeniePlus
;geniePlusDatabase = "[api_database_name]"
;geniePlusOauthId = "[api_oauth_identifier]"
;geniePlusUsername = "[api_username]"
;geniePlusPassword = "[api_password]"
;; This setting specifies the template within the API which contains catalog
;; records:
;geniePlusTemplate = Catalog
;; These settings specify the GeniePlus API response fields containing unique ID
;; and MARC data.
;geniePlusIdField = UniqRecNum
;geniePlusMarcField = MarcRecord
;; These settings specify the GeniePlus API response fields containing item
;; information, to be injected into 852 fields in the MARC record.
;geniePlusLocationField = Inventory.Location.CodeDesc
;geniePlusSublocationField = Inventory.SubLoc.CodeDesc
;geniePlusCallnumberField = Inventory.CallNumLC
;geniePlusBarcodeField = Inventory.Barcode
;; When injecting 852 fields, you can limit the number of barcodes injected per
;; location-sublocation-callnumber combination in order to control the length
;; of generated MARC records. If you only need to index holdings-level data
;; instead of item-level data, it is recommended that you set this to 1. If you
;; do not want any location data, set it to 0. You can set it to -1 for no limit
;; (the default setting).
;geniePlusItemLimitPerLocationGroup = -1
;; These settings control the MARC field/subfield in which unique GeniePlus IDs will
;; be injected:
;geniePlusUniqueIdOutputField = 999
;geniePlusUniqueIdOutputSubfield = c
;url = "[api_url]"
;batchSize = 100
;institution = GeniePlusLib
;format = marc
;dedup = false

; Sample configuration for DOAJ open access articles
;[DOAJ]
;url = https://doaj.org/oai.article
;metadataPrefix = oai_doaj
;format = doaj
;institution = DOAJ
